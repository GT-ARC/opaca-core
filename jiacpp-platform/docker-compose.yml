version: "3.3"

services:

  runtime-platform:
    image: jiacpp-platform
    build: .
    ports:
      - "8000:8000"
    # Environment variables with no value after ":" are taken from .env file
    environment:
      # General Settings
      PORT:
      PUBLIC_URL:
      CONTAINER_ENVIRONMENT:
      PLATFORM_ENVIRONMENT: NATIVE
      SESSION_POLICY:
      CONTAINER_TIMEOUT_SEC:
      DEFAULT_IMAGE_DIRECTORY:
      # Security & Authentication
      ENABLE_AUTH:
      SECRET:
      USERNAME_PLATFORM:
      PASSWORD_PLATFORM:
      ROLE_PLATFORM:
      # MongoDB
      DB_HOST: jiacpp-data
      DB_PORT: 27017
      DB_AUTH: admin
      DB_NAME: jiacpp-user-data
      DB_USER: user
      DB_PASS: pass
      # Image Registry Credentials
      REGISTRY_SEPARATOR:
      REGISTRY_NAMES:
      REGISTRY_LOGINS:
      REGISTRY_PASSWORDS:
      # Docker (only for CONTAINER_ENVIRONMENT: DOCKER)
      REMOTE_DOCKER_HOST:
      REMOTE_DOCKER_PORT:
      # Kubernetes (only for PLATFORM_ENVIRONMENT: KUBERNETES)
      KUBERNETES_NAMESPACE:
      KUBERNETES_CONFIG:
    # for running containers on the same Docker as the platform itself
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Defines a mongoDB container running alongside the platform container
  mongodb:
    image: mongo:7.0.4
    container_name: jiacpp-data
    ports:
      - "27017:27017"
    # Use "user" and "pass" as default username:password for the created database
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: pass
    # Use a volume for persistent data storage
    volumes:
      - data:/data/db
      - config:/data/configdb

# Create a volume to persistently store data
volumes:
  data:
    driver: local
  config:
    driver: local